<!DOCTYPE HTML>
<html lang="en">
<head>
    <title>User Props Config Menu</title>
    <meta name="decorator" content="atl.admin"/>
</head>
<body>
<div>
    <h2>Props Config Menu</h2>
    <div>
        <table id="user-custom-props"></table>
        <table id="user-custom-props-rest" class="aui">
            <thead>
            <tr>
                <th>Field Name</th>
                <th>User Property</th>
            </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
    <div>
        <br>
    </div>
    <div>
        <b>Add new field</b>
        <form action="#" class="aui">
            <div class="field-group">
                <label for="add-new-prop">Add field:</label>
                <input type="text" id="add-new-prop" name="add-new-prom" required minlength="2">
            </div>
            <div class="field-group">
                <label for="add-new-prop-value">Add vaue:</label>
                <input type="text" id="add-new-prop-value" name="add-new-prop-value" required minlength="2">
            </div>
            <div class="field-group">
                <button class="aui-button aui-button-primary" id="add-new-prop-button">Add</button>
            </div>
        </form>
    </div>
</div>

<script type="text/javascript">
    const currentUser = "admin";
    fetch(`/rest/api/2/user/properties?username=${currentUser}`).then(res => res.json()).then(res => {
        res.keys.forEach(keyObj => {
            fetch(`/rest/api/2/user/properties/${keyObj.key}?username=${currentUser}`).then(res => res.json()).then(res => {
                const userDataTable = document.querySelector('table#user-custom-props-rest');
                const userPropKey = res.key;
                const userPropValue = res.value[`${keyObj.key}`];
                const tr = document.createElement('tr');
                const td1 = document.createElement('td');
                td1.innerText = userPropKey;
                const td2 = document.createElement('td');
                td2.innerText = userPropValue;
                tr.appendChild(td1);
                tr.appendChild(td2);
                userDataTable.appendChild(tr);
            });
        });
    });

    const addBtn = document.querySelector('button#add-new-prop-button');
    const propKey = document.querySelector('input#add-new-prop').value.trim();
    const propValue = document.querySelector('input#add-new-prop-value').value.trim();
    addBtn.addEventListener('click', evt => {
        evt.preventDefault();
        const newProp = {
            "key": propKey,
            "value": {
                propKey: propValue
            }
        }
        fetch(`/rest/api/2/user/properties/${newProp}?username=${currentUser}`, {
            method: 'PUT',
            headers: {'Content-Type': 'application/json'},
            body: JSON.stringify(newProp)
        });
    });


</script>

<script type="text/javascript">
    AJS.RestfulTable({
        el: jQuery("#user-custom-props"),
        autoFocus: true,
        resources: {
            all: "rest/project/HSP/versions?expand=operations",
            self: "rest/version"
        },
        deleteConfirmationCallback: function (model) {
            AJS.$("#restful-table-model")[0].innerHTML = "<b>ID:</b> " + model.id + " <b>status:</b> " + model.status + " <b>description:</b> " + model.description;
            AJS.dialog2("#delete-confirmation-dialog").show();
            return new Promise(function (resolve, reject) {
                AJS.$("#dialog-submit-button").click(function (e) {
                    resolve();
                    e.preventDefault();
                    AJS.dialog2("#delete-confirmation-dialog").hide();
                });
                AJS.$(".aui-dialog2-header-close, #warning-dialog-cancel").click(function (e) {
                    reject();
                    e.preventDefault();
                    AJS.dialog2("#delete-confirmation-dialog").hide();
                });
            });
        },
        columns: [
            {
                id: "status",
                header: ""
            },
            {
                id: "name",
                header: "Version name"
            },
            {
                id: "description",
                header: "Description"
            },
            {
                id: "releaseDate",
                header: "Release date"
            }
        ]
    });
</script>
</body>
</html>

