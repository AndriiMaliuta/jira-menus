<!DOCTYPE HTML>
<html lang="en">
<head>
    <title>User Props Config Menu</title>
    <meta name="decorator" content="atl.admin"/>
</head>
<body>
<div>
    <h2>Props Config Menu</h2>
    <div>
        <table id="user-custom-props"></table>
        <table id="user-custom-props-rest" class="aui">
            <thead>
            <tr>
                <th>Field Name</th>
                <th>User Property</th>
                <th>Actions</th>
            </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
    <div>
        <br>
    </div>
    <div>
        <b>Add new field</b>
        <form action="#" class="aui">
            <div class="field-group">
                <label for="add-new-prop">Add field:</label>
                <input type="text" id="add-new-prop" name="add-new-prom" required minlength="2">
            </div>
            <div class="field-group">
                <label for="add-new-prop-value">Add value:</label>
                <input type="text" id="add-new-prop-value" name="add-new-prop-value" required minlength="2">
            </div>
            <div class="field-group">
                <button class="aui-button aui-button-primary" id="add-new-prop-button">Add</button>
            </div>
        </form>
    </div>
</div>

<script type="text/javascript">
    const currentUser = "admin";
    const propsTable = document.querySelector('table#user-custom-props-rest');

    function getPropsData() {
        propsTable.querySelector('tbody').innerHTML = '';

        fetch(`/rest/api/2/user/properties?username=${currentUser}`).then(res => res.json()).then(res => {
            res.keys.forEach(keyObj => {
                fetch(`/rest/api/2/user/properties/${keyObj.key}?username=${currentUser}`).then(res => res.json()).then(res => {
                    const userDataTable = document.querySelector('table#user-custom-props-rest');
                    const userPropKey = res.key;
                    const userPropValue = res.value[`${keyObj.key}`];

                    const tr = document.createElement('tr');
                    const td1 = document.createElement('td');
                    td1.innerText = userPropKey;
                    const td2 = document.createElement('td');
                    td2.innerText = userPropValue;

                    const td3 = document.createElement('td');
                    td3.innerHTML = `<button class="aui-button aui-button-primary"
                                         id="delete-new-prop-button-${userPropKey}"
                                         onclick="if (!(confirm('Are you sure you want to delete this property?'))) return false">
                                    Delete
                                 </button>`;
                    td3.dataset.propKey = userPropKey;

                    tr.appendChild(td1);
                    tr.appendChild(td2);
                    tr.appendChild(td3);

                    userDataTable.querySelector('tbody').appendChild(tr);

                    // deleting
                    const deleteBtn = document.querySelector(`button#delete-new-prop-button-${userPropKey}`);
                    const deleteButtons = document.querySelectorAll(`button.aui-button`);
                    deleteButtons.forEach(btn => {
                        if (btn.innerText === 'Delete') {
                            btn.addEventListener('click', evt => {
                                evt.preventDefault();
                                let deletePropKey = btn.id.replace("delete-new-prop-button-", "");
                                fetch(`/rest/api/2/user/properties/${deletePropKey}?username=${currentUser}`, {
                                    method: 'DELETE',
                                    headers: {'Content-Type': 'application/json'}
                                });

                            });
                        }
                    });
                    propsTable.querySelector('tbody').innerHTML = '';
                    getPropsData();
                });
            });
        });
    }

    function initAddingProps() {
        const addBtn = document.querySelector('button#add-new-prop-button');
        addBtn.addEventListener('click', evt => {
            evt.preventDefault();
            const newPropKey = document.querySelector('input#add-new-prop').value.trim();
            const propValue = document.querySelector('input#add-new-prop-value').value.trim();
            fetch(`/rest/api/2/user/properties/${newPropKey}?username=${currentUser}`, {
                method: 'PUT',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({[newPropKey]: propValue})
            });
            getPropsData();
        });

    }

    getPropsData();
    initAddingProps();

</script>

<script type="text/javascript">
    AJS.toInit(function() {
        new AJS.RestfulTable({
            el: jQuery("#project-config-versions-table"),
            autoFocus: true,
            resources: {
                all: "rest/project/HSP/versions?expand=operations",
                self: "rest/version"
            },
            deleteConfirmationCallback: function(model) {
                AJS.$("#restful-table-model")[0].innerHTML = "<b>ID:</b> " + model.id + " <b>status:</b> " + model.status + " <b>description:</b> " + model.description;
                AJS.dialog2("#delete-confirmation-dialog").show();
                return new Promise(function(resolve, reject) {
                    AJS.$("#dialog-submit-button").on('click', function (e) {
                        resolve();
                        e.preventDefault();
                        AJS.dialog2("#delete-confirmation-dialog").hide();
                    });
                    AJS.$(".aui-dialog2-header-close, #warning-dialog-cancel").on('click', function (e) {
                        reject();
                        e.preventDefault();
                        AJS.dialog2("#delete-confirmation-dialog").hide();
                    });
                });
            },
            columns: [
                {
                    id: "status",
                    header: ""
                },
                {
                    id: "name",
                    header: "Version name"
                },
                {
                    id: "description",
                    header: "Description"
                },
                {
                    id: "releaseDate",
                    header: "Release date",
                    inputAriaLabel: "Release date field"
                }
            ]
        });
    });
</script>
</body>
</html>

